package src;

import java.util.ArrayList;
import java.util.Collections;
import java.util.List;
import java.util.Random;
import java.util.Scanner;

public class OnePiece {

    private List<Pergunta> perguntas;
    private Random random;

    public OnePiece() {
        perguntas = new ArrayList<>();
        random = new Random();
        carregarPerguntas();
    }

    public Pergunta getPerguntaAleatoria() {
        if (perguntas.isEmpty()) {
            return null;
        }
        int index = random.nextInt(perguntas.size());
        Pergunta p = perguntas.get(index);
        perguntas.remove(index);
        return p;
    }

    private void carregarPerguntas() {
        perguntas.add(new Pergunta(
                "Quem √© o capit√£o dos Chap√©us de Palha?",
                new String[]{"Roronoa Zoro", "Monkey D. Luffy", "Sanji", "Usopp"},
                1,
                new String[]{
                        "Ops! Zoro √© s√≥ o espadachim!",
                        "Correto! Luffy √© o capit√£o com estilo!",
                        "Sanji s√≥ cozinha, n√£o comanda!",
                        "Usopp √© bom de mentira, mas n√£o de lideran√ßa!"
                }
        ));

        perguntas.add(new Pergunta(
                "Qual √© o sonho de Sanji?",
                new String[]{"Encontrar o One Piece", "Se tornar o Rei dos Piratas", "Encontrar All Blue", "Dominar Haki"},
                2,
                new String[]{
                        "N√£o √© esse... ele sonha grande na cozinha!",
                        "Luffy sonha nisso, n√£o Sanji!",
                        "Acertou! Ele quer encontrar o All Blue!",
                        "Haki √© bom, mas n√£o √© o sonho dele!"
                }
        ));

        perguntas.add(new Pergunta(
                "Quem comeu a Gomu Gomu no Mi?",
                new String[]{"Nami", "Zoro", "Luffy", "Chopper"},
                2,
                new String[]{
                        "Nami s√≥ rouba dinheiro, n√£o come frutas m√°gicas!",
                        "Zoro prefere treino e espadas!",
                        "Acertou! Luffy ficou el√°stico!",
                        "Chopper √© fofinho, mas n√£o come Gomu Gomu no Mi!"
                }
        ));

        perguntas.add(new Pergunta(
                "Qual √© o nome do navio atual dos Chap√©us de Palha?",
                new String[]{"Going Merry", "Thousand Sunny", "Red Force", "Sunny Go"},
                1,
                new String[]{
                        "Going Merry foi destru√≠do, mas j√° foi lend√°rio!",
                        "Correto! O atual √© Thousand Sunny!",
                        "Red Force? Isso √© de outro anime!",
                        "Sunny Go? Quase, mas n√£o √© o nome oficial!"
                }
        ));

        perguntas.add(new Pergunta(
                "Quem √© o espadachim do bando?",
                new String[]{"Zoro", "Sanji", "Franky", "Usopp"},
                0,
                new String[]{
                        "Correto! Zoro corta tudo!",
                        "Sanji corta comida, n√£o inimigos!",
                        "Franky constr√≥i, n√£o espada!",
                        "Usopp s√≥ atira mentiras!"
                }
        ));

        perguntas.add(new Pergunta(
                "Qual √© o poder de Chopper?",
                new String[]{"Transforma√ß√£o", "Haki", "Logia", "Gelo"},
                0,
                new String[]{
                        "Acertou! Chopper pode se transformar!",
                        "Haki? S√≥ alguns conseguem!",
                        "Logia √© outro tipo de Akuma no Mi!",
                        "Gelo? Ele n√£o controla isso!"
                }
        ));

        perguntas.add(new Pergunta(
                "Quem √© o m√©dico do bando?",
                new String[]{"Chopper", "Sanji", "Nami", "Robin"},
                0,
                new String[]{
                        "Correto! Chopper cuida da galera!",
                        "Sanji cozinha, n√£o cura!",
                        "Nami s√≥ cuida da b√∫ssola!",
                        "Robin descobre hist√≥ria, n√£o medicinas!"
                }
        ));

        perguntas.add(new Pergunta(
                "Qual o objetivo de Nico Robin?",
                new String[]{"Se tornar pirata", "Descobrir o Rio Poneglyph", "Ser cozinheira", "Encontrar All Blue"},
                1,
                new String[]{
                        "Ela √© pirata sim, mas quer algo mais!",
                        "Acertou! Ela quer decifrar a hist√≥ria do mundo!",
                        "Cozinhar? N√£o √© a dela!",
                        "All Blue √© Sanji, n√£o Robin!"
                }
        ));

        perguntas.add(new Pergunta(
                "Qual personagem √© conhecido por suas mentiras exageradas?",
                new String[]{"Usopp", "Sanji", "Zoro", "Franky"},
                0,
                new String[]{
                        "Correto! Usopp √© o rei das mentiras!",
                        "Sanji n√£o mente, s√≥ cozinha!",
                        "Zoro n√£o fala muito, s√≥ corta!",
                        "Franky √© exc√™ntrico, mas n√£o mentiroso!"
                }
        ));

        perguntas.add(new Pergunta(
                "Quem √© o cozinheiro do bando?",
                new String[]{"Nami", "Sanji", "Chopper", "Robin"},
                1,
                new String[]{
                        "Nami s√≥ navega, n√£o cozinha!",
                        "Correto! Sanji manda bem na cozinha!",
                        "Chopper s√≥ cuida da sa√∫de!",
                        "Robin pesquisa hist√≥ria, n√£o cozinha!"
                }
        ));

        Collections.shuffle(perguntas);
    }

    public static class Pergunta {
        private String pergunta;
        private String[] opcoes;
        private int indiceCorreto;
        private String[] feedbacks;

        public Pergunta(String pergunta, String[] opcoes, int indiceCorreto, String[] feedbacks) {
            this.pergunta = pergunta;
            this.opcoes = opcoes;
            this.indiceCorreto = indiceCorreto;
            this.feedbacks = feedbacks;
        }

        public String getPergunta() {
            return pergunta;
        }

        public String[] getOpcoes() {
            return opcoes;
        }

        public int getIndiceCorreto() {
            return indiceCorreto;
        }

        public String getFeedback(boolean correta) {
            if (correta) {
                return feedbacks[indiceCorreto];
            } else {
                int i;
                do {
                    i = new Random().nextInt(feedbacks.length);
                } while (i == indiceCorreto);
                return feedbacks[i];
            }
        }
    }

    public static void main(String[] args) {
        OnePiece quiz = new OnePiece();
        Pergunta p;
        int acertos = 0;
        int total = 0;
        Scanner scanner = new Scanner(System.in);

        System.out.println("üè¥‚Äç‚ò†Ô∏è BEM-VINDO AO QUIZ ONE PIECE! üè¥‚Äç‚ò†Ô∏è");
        System.out.println("-----------------------------------");

        while ((p = quiz.getPerguntaAleatoria()) != null) {
            System.out.println("\n" + p.getPergunta());
            String[] opcoes = p.getOpcoes();

            for (int i = 0; i < opcoes.length; i++) {
                System.out.println((i + 1) + ". " + opcoes[i]);
            }

            System.out.print("üëâ Sua resposta: ");
            int resposta = scanner.nextInt() - 1;

            boolean correta = (resposta == p.getIndiceCorreto());
            System.out.println(p.getFeedback(correta));

            if (correta) acertos++;
            total++;

            try { Thread.sleep(1500); } catch (InterruptedException e) { }
        }

        System.out.println("\nFim do quiz! Voc√™ acertou " + acertos + "/" + total);
        System.out.println("Obrigado por jogar, pirata dos mares! ‚öì");

        scanner.close();
    }
}
